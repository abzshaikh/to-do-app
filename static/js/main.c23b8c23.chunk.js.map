{"version":3,"sources":["components/Form.js","components/Todo.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","toggleSubmit","isEdit","setToggle","onChange","e","target","value","type","className","onClick","preventDefault","map","item","id","text","completed","Math","random","alert","name","Todo","todo","seIsEdit","filter","el","ToDoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c23b8c23.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus, toggleSubmit, isEdit, setToggle }) => {\r\n\r\n        const inputextHandler = (e) => {\r\n            setInputText(e.target.value);\r\n        }\r\n\r\n        const submitTodoHandler = (e) => {\r\n            e.preventDefault();\r\n            if (!inputText) {\r\n                alert(\"Please Enter data\");\r\n            }\r\n            else if (inputText && !toggleSubmit) {\r\n                setTodos( todos.map( (item) => {\r\n                    if (item.id === isEdit) {\r\n                        return {\r\n                            ...item, text: inputText \r\n                        }\r\n                    }\r\n                    return item;\r\n                } ) )\r\n                setToggle(true);\r\n                setInputText(\"\");\r\n                // seIsEdit(item.id);\r\n            }\r\n            else {\r\n                setTodos([\r\n                    ...todos, { text: inputText, completed: false, id: Math.random() * 1000 }\r\n                ]);\r\n            }\r\n\r\n            setInputText(\"\");\r\n        }\r\n\r\n        const statushandler = (e) => {\r\n            setStatus(e.target.value);\r\n        }\r\n        return (\r\n            <form>\r\n                <input onChange = { inputextHandler } type=\"text\" className=\"todo-input\" value = { inputText } />\r\n                <button onClick = { submitTodoHandler } className=\"todo-button\" type=\"submit\">\r\n                {\r\n                    toggleSubmit ? <i className=\"fas fa-plus-square\"></i> : <i className=\"fas fa-edit\"></i>\r\n                }\r\n                \r\n                </button>\r\n                <div className=\"select\">\r\n                <select onChange={ statushandler } name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Finished</option>\r\n                    <option value=\"uncompleted\">Unfinished</option>\r\n                </select>\r\n                </div>\r\n            </form>\r\n        );\r\n}\r\n \r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo = ( {text, todo, todos, setTodos, setToggle, setInputText, seIsEdit} ) => {\r\n    const deleteHandler = () => {\r\n        setTodos( todos.filter( (el) => el.id !== todo.id ));\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setTodos( todos.map( (item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n\r\n            return item;\r\n        } ) )\r\n    }\r\n\r\n    const editHandler = () => {\r\n        todos.map( (item) => {\r\n            if (item.id === todo.id) {\r\n                setToggle(false);\r\n                setInputText(item.text);\r\n                seIsEdit(item.id);\r\n            }\r\n        })\r\n    }\r\n    return (  \r\n        <div className={`todo ${todo.completed ? \"completed\" : \"\"}`}>\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text} </li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n            <button onClick={editHandler} className=\"edit-btn\"><i className=\"fas fa-edit\"></i></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst ToDoList = ( { todos, setTodos, filteredTodos, setToggle, setInputText, seIsEdit } ) => { \r\n\r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                { filteredTodos.map ( todo => (\r\n                    <Todo key={todo.id} text={todo.text} setTodos={setTodos} todos={todos} todo={todo} setToggle={setToggle} setInputText={setInputText} seIsEdit={seIsEdit} />\r\n                )) }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ToDoList;","import React, { useState, useEffect } from  \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  const [ inputText, setInputText ] = useState(\"\");\n  const [ todos, setTodos ] = useState([]);\n  const [ status, setStatus ] = useState(\"all\");\n  const [ filteredTodos, setFilteredTodos ] = useState([]);\n  const [ toggleSubmit, setToggle ] = useState(true);\n  const [ isEdit, seIsEdit ] = useState(null);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos( todos.filter(todo => todo.completed === true))\n        break;\n      case 'uncompleted':\n        setFilteredTodos( todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }\n    else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header>Arbaz To Do list </header>\n      <Form todos={todos} setTodos={setTodos} inputText={inputText} setInputText={setInputText} setStatus={setStatus}  toggleSubmit={toggleSubmit} setToggle={setToggle} isEdit={isEdit} />\n      <ToDoList setTodos={setTodos} todos={todos} filteredTodos={filteredTodos} setToggle={setToggle} setInputText={setInputText} seIsEdit={seIsEdit} />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}